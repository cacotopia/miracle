
//  Microsoft (R) .NET Framework IL Disassembler.  Version 3.5.30729.1



// ----- DOS Header:
// Magic:                      0x5a4d
// Bytes on last page:         0x0090
// Pages in file:              0x0003
// Relocations:                0x0000
// Size of header (paragraphs):0x0004
// Min extra paragraphs:       0x0000
// Max extra paragraphs:       0xffff
// Initial (relative) SS:      0x0000
// Initial SP:                 0x00b8
// Checksum:                   0x0000
// Initial IP:                 0x0000
// Initial (relative) CS:      0x0000
// File addr. of reloc table:  0x0040
// Overlay number:             0x0000
// OEM identifier:             0x0000
// OEM info:                   0x0000
// File addr. of COFF header:  0x0080
// ----- COFF/PE Headers:
// Signature:                  0x00004550
// ----- COFF Header:
// Machine:                    0x014c
// Number of sections:         0x0003
// Time-date stamp:            0x523b9ddd
// Ptr to symbol table:        0x00000000
// Number of symbols:          0x00000000
// Size of optional header:    0x00e0
// Characteristics:            0x0102
// ----- PE Optional Header (32 bit):
// Magic:                          0x010b
// Major linker version:           0x0b
// Minor linker version:           0x00
// Size of code:                   0x00000800
// Size of init.data:              0x00000800
// Size of uninit.data:            0x00000000
// Addr. of entry point:           0x0000272e
// Base of code:                   0x00002000
// Base of data:                   0x00004000
// Image base:                     0x00400000
// Section alignment:              0x00002000
// File alignment:                 0x00000200
// Major OS version:               0x0004
// Minor OS version:               0x0000
// Major image version:            0x0000
// Minor image version:            0x0000
// Major subsystem version:        0x0004
// Minor subsystem version:        0x0000
// Size of image:                  0x00008000
// Size of headers:                0x00000200
// Checksum:                       0x00000000
// Subsystem:                      0x00000003
// DLL characteristics:            0x00008540
// Size of stack reserve:          0x00100000
// Size of stack commit:           0x00001000
// Size of heap reserve:           0x00100000
// Size of heap commit:            0x00001000
// Loader flags:                   0x00000000
// Directories:                    0x00000010
// 0x00000000 [0x00000000] address [size] of Export Directory:          
// 0x000026d4 [0x00000057] address [size] of Import Directory:          
// 0x00004000 [0x000004e0] address [size] of Resource Directory:        
// 0x00000000 [0x00000000] address [size] of Exception Directory:       
// 0x00000000 [0x00000000] address [size] of Security Directory:        
// 0x00006000 [0x0000000c] address [size] of Base Relocation Table:     
// 0x00000000 [0x00000000] address [size] of Debug Directory:           
// 0x00000000 [0x00000000] address [size] of Architecture Specific:     
// 0x00000000 [0x00000000] address [size] of Global Pointer:            
// 0x00000000 [0x00000000] address [size] of TLS Directory:             
// 0x00000000 [0x00000000] address [size] of Load Config Directory:     
// 0x00000000 [0x00000000] address [size] of Bound Import Directory:    
// 0x00002000 [0x00000008] address [size] of Import Address Table:      
// 0x00000000 [0x00000000] address [size] of Delay Load IAT:            
// 0x00002008 [0x00000048] address [size] of CLR Header:                


// Image sections:
//              .text
//              0x00000734 Virtual Size
//              0x00002000 Virtual Address
//              0x00000800 Size of Raw Data
//              0x00000200 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x60000020 Characteristics
//                         CNT_CODE
//                         MEM_EXECUTE
//                         MEM_READ

//              .rsrc
//              0x000004e0 Virtual Size
//              0x00004000 Virtual Address
//              0x00000600 Size of Raw Data
//              0x00000a00 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x40000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_READ

//              .reloc
//              0x0000000c Virtual Size
//              0x00006000 Virtual Address
//              0x00000200 Size of Raw Data
//              0x00001000 Pointer to Raw Data
//              0x00000000 Pointer to Relocations
//              0x00000000 Pointer to Linenumbers
//                  0x0000 Number of Relocations
//                  0x0000 Number of Linenumbers
//              0x42000040 Characteristics
//                         CNT_INITIALIZED_DATA
//                         MEM_DISCARDABLE
//                         MEM_READ

// Base Relocation Table
//              0x00002000 Page RVA
//              0x0000000c Block Size
//              0x00000002 Number of Entries
//              Entry 1: Type 0x3 Offset 0x00000730
//              Entry 2: Type 0x0 Offset 0x00000000

// Import Address Table
//     DLL : mscoree.dll
//              0x00002000 Import Address Table
//              0x0000271e Import Name Table
//              0          Time Date Stamp
//              0          Index of First Forwarder Reference
//
//              0x0000  _CorExeMain

// Delay Load Import Address Table
// 没有数据。

// Entry point code:
//FF 25 00 20 40 00 


// ----- CLR Header:
// Header size:                        0x00000048
// Major runtime version:              0x0002
// Minor runtime version:              0x0005
// 0x00002148 [0x0000058c] address [size] of Metadata Directory:        
// Flags:                              0x00000001
// Entry point token:                  0x06000005
// 0x00000000 [0x00000000] address [size] of Resources Directory:       
// 0x00000000 [0x00000000] address [size] of Strong Name Signature:     
// 0x00000000 [0x00000000] address [size] of CodeManager Table:         
// 0x00000000 [0x00000000] address [size] of VTableFixups Directory:    
// 0x00000000 [0x00000000] address [size] of Export Address Table:      
// 0x00000000 [0x00000000] address [size] of Precompile Header:         

// Metadata Header
//    Storage Signature:
//              0x424a5342 Signature
//                  0x0001 Major Version
//                  0x0001 Minor Version
//              0x00000000 Extra Data Offset
//              0x0000000c Version String Length
//              'v4.0.30319' Version String
//    Storage Header:
//                    0x00 Flags
//                  0x0005 Number of Streams
//    Stream 1:
//              0x0000006c Offset
//              0x00000268 Size
//              '#~' Name
//    Stream 2:
//              0x000002d4 Offset
//              0x000001f4 Size
//              '#Strings' Name
//    Stream 3:
//              0x000004c8 Offset
//              0x00000008 Size
//              '#US' Name
//    Stream 4:
//              0x000004d0 Offset
//              0x00000010 Size
//              '#GUID' Name
//    Stream 5:
//              0x000004e0 Offset
//              0x000000ac Size
//              '#Blob' Name

//    Metadata Stream Header:
//              0x00000000 Reserved
//                    0x02 Major
//                    0x00 Minor
//                    0x00 Heaps
//                    0x01 Rid
//      0x00000a0901b61d57 MaskValid
//      0x000016003325fa00 Sorted

// Code Manager Table:
//  default


// Export Address Table Jumps:
// 没有数据。


// Metadata version: v4.0.30319
.assembly extern /*23000001*/ mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 4:0:0:0
}
.assembly /*20000001*/ OOPBasic
{
  .custom /*0C000001:0A000001*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.CompilationRelaxationsAttribute/*01000003*/::.ctor(int32) /* 0A000001 */ = ( 01 00 08 00 00 00 00 00 ) 
  .custom /*0C000002:0A000002*/ instance void [mscorlib/*23000001*/]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute/*01000004*/::.ctor() /* 0A000002 */ = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                                                                                          63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.
  .hash algorithm 0x00008004
  .ver 0:0:0:0
}
.module OOPBasic.exe
// MVID: {4C995095-0BF8-42D0-A689-E613CA4E2AA7}
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000001    //  ILONLY
// Image base: 0x07A70000


// =============== CLASS MEMBERS DECLARATION ===================

.class /*02000002*/ public auto ansi sealed SomeType
       extends [mscorlib/*23000001*/]System.Object/*01000001*/
{
  .custom /*0C000003:0A000003*/ instance void [mscorlib/*23000001*/]System.Reflection.DefaultMemberAttribute/*01000005*/::.ctor(string) /* 0A000003 */ = ( 01 00 04 49 74 65 6D 00 00 )                      // ...Item..
  .class /*02000003*/ auto ansi nested private beforefieldinit SomeNestedType
         extends [mscorlib/*23000001*/]System.Object/*01000001*/
  {
    .method /*0600000C*/ public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // 代码大小       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib/*23000001*/]System.Object/*01000001*/::.ctor() /* 0A000004 */
      IL_0006:  ret
    } // end of method SomeNestedType::.ctor

  } // end of class SomeNestedType

  .field /*04000001*/ private static literal int32 SomeConstant = int32(0x00000001)
  .field /*04000002*/ private initonly int32 SomeReadOnlyField
  .field /*04000003*/ private static int32 SomeReadWriteField
  .field /*04000004*/ private class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ SomeEvent
  .method /*06000001*/ private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 代码大小       9 (0x9)
    .maxstack  8
    IL_0000:  ldc.i4.3
    IL_0001:  stsfld     int32 SomeType/*02000002*/::SomeReadWriteField /* 04000003 */
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ret
  } // end of method SomeType::.cctor

  .method /*06000002*/ public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 x) cil managed
  {
    // 代码大小       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.2
    IL_0002:  stfld      int32 SomeType/*02000002*/::SomeReadOnlyField /* 04000002 */
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib/*23000001*/]System.Object/*01000001*/::.ctor() /* 0A000004 */
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  nop
    IL_0010:  ret
  } // end of method SomeType::.ctor

  .method /*06000003*/ public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 代码大小       17 (0x11)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.2
    IL_0002:  stfld      int32 SomeType/*02000002*/::SomeReadOnlyField /* 04000002 */
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib/*23000001*/]System.Object/*01000001*/::.ctor() /* 0A000004 */
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  nop
    IL_0010:  ret
  } // end of method SomeType::.ctor

  .method /*06000004*/ private hidebysig 
          instance string  InstanceMethod() cil managed
  {
    // 代码大小       7 (0x7)
    .maxstack  1
    .locals /*11000001*/ init (string V_0)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method SomeType::InstanceMethod

  .method /*06000005*/ public hidebysig static 
          void  Main() cil managed
  {
    .entrypoint
    // 代码大小       2 (0x2)
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SomeType::Main

  .method /*06000006*/ public hidebysig specialname 
          instance int32  get_SomeProperty() cil managed
  {
    // 代码大小       7 (0x7)
    .maxstack  1
    .locals /*11000002*/ init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method SomeType::get_SomeProperty

  .method /*06000007*/ public hidebysig specialname 
          instance void  set_SomeProperty(int32 'value') cil managed
  {
    // 代码大小       2 (0x2)
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SomeType::set_SomeProperty

  .method /*06000008*/ public hidebysig specialname 
          instance int32  get_Item(string s) cil managed
  {
    // 代码大小       7 (0x7)
    .maxstack  1
    .locals /*11000002*/ init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method SomeType::get_Item

  .method /*06000009*/ public hidebysig specialname 
          instance void  set_Item(string s,
                                  int32 'value') cil managed
  {
    // 代码大小       2 (0x2)
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SomeType::set_Item

  .method /*0600000A*/ public hidebysig specialname 
          instance void  add_SomeEvent(class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ 'value') cil managed
  {
    // 代码大小       48 (0x30)
    .maxstack  3
    .locals /*11000003*/ init (class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ V_0,
             class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ V_1,
             class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ V_2,
             bool V_3)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ SomeType/*02000002*/::SomeEvent /* 04000004 */
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldarg.1
    IL_000b:  call       class [mscorlib/*23000001*/]System.Delegate/*01000006*/ [mscorlib/*23000001*/]System.Delegate/*01000006*/::Combine(class [mscorlib/*23000001*/]System.Delegate/*01000006*/,
                                                                                                                                            class [mscorlib/*23000001*/]System.Delegate/*01000006*/) /* 0A000005 */
    IL_0010:  castclass  [mscorlib/*23000001*/]System.EventHandler/*01000002*/
    IL_0015:  stloc.2
    IL_0016:  ldarg.0
    IL_0017:  ldflda     class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ SomeType/*02000002*/::SomeEvent /* 04000004 */
    IL_001c:  ldloc.2
    IL_001d:  ldloc.1
    IL_001e:  call       !!0 [mscorlib/*23000001*/]System.Threading.Interlocked/*01000007*/::CompareExchange<class [mscorlib/*23000001*/]System.EventHandler/*01000002*/>(!!0&,
                                                                                                                                                                          !!0,
                                                                                                                                                                          !!0) /* 2B000001 */
    IL_0023:  stloc.0
    IL_0024:  ldloc.0
    IL_0025:  ldloc.1
    IL_0026:  ceq
    IL_0028:  ldc.i4.0
    IL_0029:  ceq
    IL_002b:  stloc.3
    IL_002c:  ldloc.3
    IL_002d:  brtrue.s   IL_0007

    IL_002f:  ret
  } // end of method SomeType::add_SomeEvent

  .method /*0600000B*/ public hidebysig specialname 
          instance void  remove_SomeEvent(class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ 'value') cil managed
  {
    // 代码大小       48 (0x30)
    .maxstack  3
    .locals /*11000003*/ init (class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ V_0,
             class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ V_1,
             class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ V_2,
             bool V_3)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ SomeType/*02000002*/::SomeEvent /* 04000004 */
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldarg.1
    IL_000b:  call       class [mscorlib/*23000001*/]System.Delegate/*01000006*/ [mscorlib/*23000001*/]System.Delegate/*01000006*/::Remove(class [mscorlib/*23000001*/]System.Delegate/*01000006*/,
                                                                                                                                           class [mscorlib/*23000001*/]System.Delegate/*01000006*/) /* 0A000007 */
    IL_0010:  castclass  [mscorlib/*23000001*/]System.EventHandler/*01000002*/
    IL_0015:  stloc.2
    IL_0016:  ldarg.0
    IL_0017:  ldflda     class [mscorlib/*23000001*/]System.EventHandler/*01000002*/ SomeType/*02000002*/::SomeEvent /* 04000004 */
    IL_001c:  ldloc.2
    IL_001d:  ldloc.1
    IL_001e:  call       !!0 [mscorlib/*23000001*/]System.Threading.Interlocked/*01000007*/::CompareExchange<class [mscorlib/*23000001*/]System.EventHandler/*01000002*/>(!!0&,
                                                                                                                                                                          !!0,
                                                                                                                                                                          !!0) /* 2B000001 */
    IL_0023:  stloc.0
    IL_0024:  ldloc.0
    IL_0025:  ldloc.1
    IL_0026:  ceq
    IL_0028:  ldc.i4.0
    IL_0029:  ceq
    IL_002b:  stloc.3
    IL_002c:  ldloc.3
    IL_002d:  brtrue.s   IL_0007

    IL_002f:  ret
  } // end of method SomeType::remove_SomeEvent

  .event /*14000001*/ [mscorlib/*23000001*/]System.EventHandler/*01000002*/ SomeEvent
  {
    .addon instance void SomeType/*02000002*/::add_SomeEvent(class [mscorlib/*23000001*/]System.EventHandler/*01000002*/) /* 0600000A */
    .removeon instance void SomeType/*02000002*/::remove_SomeEvent(class [mscorlib/*23000001*/]System.EventHandler/*01000002*/) /* 0600000B */
  } // end of event SomeType::SomeEvent
  .property /*17000001*/ instance int32 SomeProperty()
  {
    .set instance void SomeType/*02000002*/::set_SomeProperty(int32) /* 06000007 */
    .get instance int32 SomeType/*02000002*/::get_SomeProperty() /* 06000006 */
  } // end of property SomeType::SomeProperty
  .property /*17000002*/ instance int32 Item(string)
  {
    .get instance int32 SomeType/*02000002*/::get_Item(string) /* 06000008 */
    .set instance void SomeType/*02000002*/::set_Item(string,
                                                      int32) /* 06000009 */
  } // end of property SomeType::Item
} // end of class SomeType


// =============================================================

// *********** 反汇编完成 ***********************
// 警告: 创建了 Win32 资源文件 F:\GitHub\miracle\miracle\csharp\HowToCodeViaCSharp\OOPBAsic.res
